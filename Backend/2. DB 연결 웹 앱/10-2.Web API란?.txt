<Web API>

REST API의 모든 스타일을 구현하지 못할 경우에는
Web API나 Http API라고 부름

Web API를 만들 때는 몇 가지 중요한 원칙이 있음


[Web API 디자인 가이드]

URI는 정보의 자원을 표현해야 함

자원에 대한 행위는 HTTP Method(GET, POST, PUT, DELETE)로 표현


[자원에 대한 행위는 HTTP Method로 표현]

HTTP 메서드에 따라 API에 요청하는 바가 달라짐

- POST : POST를 통해 해당 URI를 요청하면 리소스를 생성
- GET : GET을 통해 해당 리소스를 조회.
        리소스를 조회하고 해당 도큐먼트에 대한 자세한 정보를 가져옴
- PUT : PUT을 통해 해당 리소스를 수정
- DELETE : DELETE를 통해 리소스 삭제


[URI는 정보의 자원을 표현해야 한다]

GET /members

위의 표현은 멤버의 모든 정보를 달라는 요청

GET /members/delete/1

GET은 정보를 요청할 때 사용. 위와 같이 동사로 삭제를 표현하면 안됨

DELETE /members/1

HTTP Method 중 하나인 DELETE를 이용해 삭제를 표현해야 함
-> members 중에 1에 해당하는 것을 삭제하라는 뜻


[자원에 대한 행위는 HTTP Method로 표현]

조회, 입력, 삭제, 수정과 관련된 것들이 동사로 표현되면 안 됨

GET /members/1        (o)
GET /members/get/1    (x)
GET /members/add      (x)
POST /members         (o)
GET /members/update/1 (x)
PUT /members/1        (o)
GET /members/del/1    (x)
DELETE /members/1     (o)


[슬래시 구분자(/)는 계층을 나타낼 때 사용]

http://domain/houses/apartments
http://domain/departments/1/employees

- URI 마지막 문자로 슬래시 구분자를 포함하지 않음
- 하이픈(-)은 URI가독성을 높일 때 사용
- 언더바(_)는 사용하지 않음
- URI경로는 소문자만 사용. RFC3986(URI문법형식)은 URI스키마와 호스트를 제외하고는 대소문자를 구별
- 파일 확장자는 URI에 포함시키지 않음. Accept Header를 사용


[상태코드(성공)]

200번대는 대부분 성공을 의미

200 : 클라이언트의 요청을 정상적으로 수행
201 : 클라이언트가 어떠한 리소스 생성을 요청, 해당 리소스가 성공적으로 생성됨
      (POST를 통한 리소스 생성 작업 시)


[상태코드(클라이언트로 인한 오류)]

400번대는 모두 클라이언트가 뭔가 잘못 요청했을 때

400 : 클라이언트의 요청이 부적절할 경우 사용하는 응답코드
401 : 클라이언트가 인증되지 않은 상태에서 보호된 리소스를 요청했을 때
      (로그인하지 않은 유저가 로그인했을 때 요청 가능한 리소스를 요청했을 경우)
403 : 유저 인증상태와 관계없이 응답하고 싶지 않은 리소스를 클라이언트가 요청했을 때
      (403보다는 400이나 404를 사용할 것을 권고. 403 자체가 리소스가 존재한다는 뜻이기 때문)
405 : 클라이언트가 요청한 리소스에서는 사용 불가능한 Method를 이용했을 경우


[상태코드(서버로 인한 오류)]

500번대는 대부분 서버가 잘못했을 때

301 : 클라이언트가 요청한 리소스에 대한 URI가 변경되었을 때
      (응답 시 Location header에 변경된 URI를 적어줘야 함)
500 : 서버에 문제가 있을 경우

